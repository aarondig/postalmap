{"version":3,"file":"static/js/462.4c55c1bf.chunk.js","mappings":"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","sources":["routes/mobile/sections/text/index.js","routes/mobile/sections/view/index.js","routes/mobile/sections/video/index.js","routes/mobile/sections/image/index.js","routes/mobile/sections/detail/index.js","routes/mobile/sections/slider/index.js","routes/mobile/sections/title/index.js","components/ui/organisms/scroller/index.js","routes/mobile/pages/Loader/index.js"],"sourcesContent":["import React, { useState, useRef, Suspense, useEffect } from \"react\";\nimport \"./style.css\";\nimport { a, useSpring, useSprings } from \"react-spring\";\nimport useOnScreen from \"../../../../hooks/useOnScreen\";\nimport { InView } from \"react-intersection-observer\";\n\nfunction Text({\n  i,\n  el,\n  section,\n  setVisibleSection,\n  slow3,\n  scrollContainer,\n  scroll,\n  data\n}) {\n\n  const [inView, setInView] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    inView && setVisibleSection(i);\n  }, [inView]);\n\n  const parallax = useRef();\n\n\n\n  //ANIMATIONS\n  const line1 = useSpring({\n    opacity: inView ? 1 : 0,\n    transform: inView ? \"translateY(0)\" : \"translateY(20px)\",\n    delay: 100,\n    config: { duration: 250 },\n  });\n  const line2 = useSpring({\n    opacity: inView ? 1 : 0,\n    transform: inView ? \"translateY(0)\" : \"translateY(20px)\",\n    delay: 200,\n    config: { duration: 250 },\n  });\n  const line3 = useSpring({\n    opacity: inView ? 1 : 0,\n    transform: inView ? \"translateY(0)\" : \"translateY(20px)\",\n    delay: 300,\n    config: { duration: 250 },\n  });\n\n  const textSprings = useSprings(\n    el.text.length,\n    el.text.map(\n      (el, i) =>\n      inView ? {\n          from: {\n            opacity: 0,\n            transform: \"translateY(+20px)\",\n          },\n          to: {\n            opacity: 1,\n            transform: \"translateY(0)\",\n          },\n\n          delay: (100 * i)+ 300,\n          config: {\n            // mass: 1,\n            // tension: 280,\n            // friction: 18\n          },\n        } :\n        {\n          from: {\n            opacity: 1,\n            transform: \"translateY(0px)\",\n          },\n          to: {\n            opacity: 0,\n            transform: \"translateY(+20px)\",\n          },\n\n          delay: (100 * i)+ 300,\n          config: {\n            // mass: 1,\n            // tension: 280,\n            // friction: 18\n          },\n        }\n    )\n  );\n\n\n  // LIGHT MODE OR DARK MODE (False is Dark)\n  const [lightMode, setLightMode] = useState();\n\n  useEffect(() => {\n    if (el.lightMode === \"light\") {\n      setLightMode(true);\n    }\n    if (el.lightMode === \"dark\") {\n      setLightMode(false);\n    }\n  }, []);\n\n  const text = {\n    id: \"text\",\n    ref: section,\n\n    style: lightMode ? { background: \"#f4f4f4\", } : { background: \"#050505\", },\n\n    onChange: (entry) => !entry && setInView(false),\n  };\n\n  return (\n    <InView {...text}>\n    <InView onChange={(entry) => entry && setInView(true)} threshold={.6}>\n      \n      {/* {data[i-1] && (data[i-1].type !== \"detail\" && <div className=\"top-spacer\" />)} */}\n      <div className=\"section-wrap\">\n        <div className=\"row\">\n          <div className=\"col-3\">\n            {lightMode ? (\n              <div\n                className=\"text-c\"\n                ref={parallax}\n                style={lightMode ? { color: \"#050505\" } : { color: \"#ffffff\" }}\n              >\n                {el.subtitle !== null && <h6 className=\"subtitle\">{el.subtitle}</h6>}\n                {el.title !== null &&  <h2 className=\"title\">{el.title}</h2>}\n                {el.text.map((e,i)=>{\n                  return (<p className=\"text\" key={i}>{el.text[i]}</p>)\n                })\n                }\n                {el.button && (\n                  <div className=\"button-c\">\n                    <a href={el.button.link}>\n                      <h6 className=\"button-text\">{el.button.text}</h6>\n                     </a> \n                      \n\n                      <div className=\"button-visual\"></div>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div\n                className=\"text-c\"\n                ref={parallax}\n                style={lightMode ? { color: \"#050505\" } : { color: \"#ffffff\" }}\n              >\n                {el.subtitle !== null && <a.h6 className=\"subtitle\" style={line1}>\n                  {el.subtitle}\n                </a.h6>}\n                {el.title !== null &&  <a.h2 className=\"title\" style={line2}>\n                  {el.title}\n                </a.h2>}\n                {el.text !== null && el.text.map((e,i)=>{\n                return <a.p className=\"text\" style={textSprings[i]} key={i}>\n                  {el.text[i]}\n                </a.p>\n                })}\n                \n              </div>\n            )}\n          </div>\n          {/* <div className=\"col-1\"></div> */}\n        </div>\n      </div>\n      {/* {data[i+1] && data[i+1].type !== \"video\" || \"slider\" && <div className=\"bottom-spacer\" />} */}\n    </InView>\n    </InView>\n  );\n}\n\nexport default Text;\n","import React, { useState, useEffect, useRef, Suspense, useMemo } from \"react\";\nimport \"./style.css\";\nimport { InView, useInView } from \"react-intersection-observer\";\nimport { data } from \"../../../../data\";\nimport { serialize } from \"cheerio/lib/api/forms\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nfunction View({\n  i,\n  el,\n  section,\n  current,\n  setCurrent,\n  visibleSection,\n  setVisibleSection,\n  sectionSize,\n  scroll,\n  basename,\n}) {\n  const handleVisible = (inView, entry) => {\n    if (inView) {\n      // setIsInView(inView)\n      setVisibleSection(i);\n    }\n  };\n  const navigate = useNavigate();\n  const location = useLocation();\n  const url = location.pathname.split(\"/\");\n\n \n  const handleNext = () => {\n\n    if (current >= data.length - 1) {\n      navigate(`../${url[1]}/${data[0].id}`, { replace: true });\n      setCurrent(0);\n      // navigate(`${data[0].id}`)\n    }\n    if (current < data.length - 1) {\n      navigate(`../${url[1]}/${data[current + 1].id}`, { replace: true });\n      setCurrent(current + 1);\n      \n    }\n  };\n  const handlePrev = () => {\n    if (current <= 0) {\n      navigate(`../${url[1]}/${data[data.length - 1].id}`, { replace: true });\n      setCurrent(data.length - 1);\n    }\n    if (current > 0) {\n      navigate(`../${url[1]}/${data[current - 1].id}`, { replace: true });\n      setCurrent(current - 1);\n    }\n  };\n\n  return (\n    <InView id=\"view\" ref={section}>\n      <InView\n        className=\"inView\"\n        onChange={(inView, entry) => handleVisible(inView, entry)}\n        threshold={0.6}\n      >\n        <div className=\"section-wrap\">\n          {/* <div className=\"content-box\"> */}\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <div className=\"text-c\">\n                <h6 className=\"subtitle\">\n                  / {el.number} {el.subtitle}\n                </h6>\n                <h2 className=\"title\">{el.title}</h2>\n                <div className=\"order-btns row\">\n                  <div className=\"order-btns\">\n                    <div\n                      className=\"order-btn prev\"\n                      onTouchEnd={(e) => handlePrev(e)}\n                      // onClick={(e) => handlePrev(e)}\n                    >\n                      <p>Prev</p>\n                    </div>\n                    <div className=\"order-btn\">\n                      <p>/</p>\n                    </div>\n                    <div\n                      className=\"order-btn next\"\n                      onTouchEnd={(e) => handleNext(e)}\n                      // onClick={(e) => handleNext(e)}\n                    >\n                      <p>Next</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-1\"></div>\n          </div>\n        </div>\n      </InView>\n    </InView>\n  );\n}\n\nexport default View;\n","import React, {\n  useState, useEffect,\n} from \"react\";\nimport \"./style.css\";\nimport {data} from \"../../../../data\"\nimport { InView } from \"react-intersection-observer\";\nimport { a, useSpring } from \"react-spring\";\n\nfunction Video({i, el,  section, setVisibleSection}) {\n  const [inView, setInView] = useState();\n  const [audio, setAudio] = useState();\n\n  useEffect(()=>{\n    inView && setVisibleSection(i)\n  },[inView])\n\n  const overlay = useSpring({\n   opacity: audio ? 0 : .6,\n  })\n  const overlaytext = useSpring({\n    opacity: audio ? 0 : 1,\n   })\n\n   const opacity = useSpring({\n    opacity: inView ? 1 : 0,\n    // delay: 100,\n    config: { duration: 250 },\n  });\n\n  return <InView id=\"video\" ref={section} onChange={setInView} threshold={.6}>\n\n       {/* <div className=\"parallax-back\"/> */}\n       {/* style={opacity} */}\n          <a.div className=\"video-c\" onClick={()=> setAudio(!audio)}>\n          <div className=\"video-overlay-c\">\n          <a.h6 className=\"subtitle\" style={overlaytext}>Tap to Listen</a.h6>\n             \n          \n            <a.div className=\"video-overlay\" style={overlay}>\n              \n            </a.div>\n            </div>\n            <video className=\"video\" src={el.src} type=\"video\" autoPlay loop playsInline webkit-playsinline=\"true\" muted={audio ? false : true} height=\"100%\"/>\n     \n   \n      </a.div>\n      \n  </InView>\n}\n\nexport default Video;\n\n","import React, {\n  useState, useEffect,\n} from \"react\";\nimport \"./style.css\";\nimport {data} from \"../../../../data\"\nimport { InView } from \"react-intersection-observer\";\nimport { a, useSpring } from \"react-spring\";\n\nfunction Image({i, el,  section, setVisibleSection}) {\n  const [inView, setInView] = useState();\n\n  useEffect(()=>{\n    inView && setVisibleSection(i)\n  },[inView])\n\n\n   const opacity = useSpring({\n    opacity: inView ? 1 : 0,\n    // delay: 100,\n    config: { duration: 250 },\n  });\n\n  return <InView id=\"image\" ref={section} onChange={setInView} threshold={1}>\n\n      \n          <div className=\"image-c\">\n          <div className=\"image-overlay-c\">\n          {/* <h6 className=\"subtitle\">Tap to Listen</h6> */}\n             \n         \n            <div className=\"image-overlay\">\n              \n            </div>\n            \n            </div>\n            <img className=\"image\" src={el.src} type=\"image\"/>\n     \n   \n      </div>\n      <div className=\"parallax-back\" />\n\n      \n  </InView>\n}\n\nexport default Image;\n\n","import React, { useState, useRef, Suspense, useEffect } from \"react\";\nimport \"./style.css\";\nimport * as THREE from \"three\";\nimport { Canvas, useFrame, useLoader } from \"@react-three/fiber\";\nimport {\n  OrbitControls,\n  MeshReflectorMaterial,\n  ContactShadows,\n  Environment,\n  softShadows,\n} from \"@react-three/drei\";\nimport { a, useSpring } from \"react-spring\";\nimport { useGLTF } from \"@react-three/drei\";\nimport { InView } from \"react-intersection-observer\";\nimport Loader from \"../../pages/Loader\";\n\nfunction Detail({\n  i,\n  el,\n  section,\n  sectionSize,\n  setVisibleSection,\n  scrollContainer,\n  scroll,\n  data\n}) {\n  const orbit = useRef();\n\n  const [isVisible, setIsVisible] = useState(false);\n  const [inView, setInView] = useState(false);\n\n\n  useEffect(() => {\n    inView && setVisibleSection(i);\n  }, [inView]);\n\n  const visible = useSpring({\n    opacity: inView ? 1 : 0,\n    // delay: 100,\n    config: { duration: 250 },\n  });\n\n  function Scene({ orbit, scroll }) {\n    const ref = useRef();\n\n\n    // const { nodes, materials } = useLoader(GLTFLoader, el.object);\n    const { nodes, materials } = useGLTF(el.object);\n\n    useEffect(()=>{\n      if (materials.main !== undefined) {\n        materials.main.map = null;\n        materials.main.color = new THREE.Color(0x404040);\n        materials.main.transparent = true;\n      } \n      if (materials[\"\"] !== undefined) {\n        materials[\"\"].map = null;\n        materials[\"\"].color = new THREE.Color(0x404040);\n        materials[\"\"].transparent = true;\n      }\n    },[])\n    \n    // const [scale,setScale] = useState()\n    const [position,setPosition] = useState()\n    const [rotation, setRotation] = useState(0)\n   \n\n    useFrame(() => {\n      if (isVisible) {\n        if (ref.current !== undefined) {\n      ref.current.rotation.y = scroll / 800 ;\n        }\n    }\n    // if (orbit.current) {\n    //   orbit.current.target = ref.current.geometry.boundingSphere.center;\n    //   orbit.current.update();\n    // }\n \n    });\n    \n    useEffect(()=>{\n      if (ref.current !== undefined) {\n\n      \n      if (el.id) {\n        \n        ref.current.position.y = -1;\n       \n        // setRotation(.8)\n      }\n      if (el.id === \"pierpay\") {\n        // setScale(7.2)\n        let scale = 3.2;\n        ref.current.scale.x = scale;\n        ref.current.scale.y = scale;\n        ref.current.scale.z = scale;\n      \n        ref.current.position.x = 1.2;\n        ref.current.position.y = -.4;\n        \n        \n        // setRotation(11.6)\n      }\n      if (el.id === \"cannon\") {\n        let scale = 6.5;\n        ref.current.scale.x = scale;\n        ref.current.scale.y = scale;\n        ref.current.scale.z = scale;\n        // setScale(2.5)\n        ref.current.position.y = -1;\n        // setRotation(-.8)\n      } \n      if (el.id === \"platform\") {\n        // setScale(1.8)\n        let scale = 1.8;\n        ref.current.scale.x = scale;\n        ref.current.scale.y = scale;\n        ref.current.scale.z = scale;\n        ref.current.position.y = -1;\n      } \n      if (el.id === \"embstation\") {\n        // setScale(.5)\n        let scale = .5;\n        ref.current.scale.x = scale;\n        ref.current.scale.y = scale;\n        ref.current.scale.z = scale;\n        ref.current.position.y = -2;\n      } \n    }\n    \n    },[])\n\n\n\n    const mesh = {\n      ref: ref,\n      material: materials.main !== undefined ? materials.main : materials[\"\"],\n      geometry: nodes.mesh !== undefined ? nodes.mesh.geometry : nodes.mesh_0.geometry,\n      // position: position,\n      // scale: scale,\n    \n    }\n\n\n    return (\n      <Suspense fallback={<Loader/>}>\n        <mesh\n          \n          {...mesh}\n          \n        >\n    \n        </mesh>\n      </Suspense>\n    );\n  }\n\nconst orbitcontrols = {\n  maxDistance: 6,\n  minDistance: 2,\n  // enablePan: false,\n}\n\n\n\n  return (\n    <InView id=\"detail\" ref={section} onChange={setIsVisible} >\n      <InView onChange={setInView} threshold={0.6} >\n      {/* style={visible} */}\n      {/* <div className=\"background-c\">\n      <div className=\"background\"></div>\n      </div> */}\n      <div className=\"section-wrap\">\n        <div className=\"col-3\">\n          <a.div className=\"text-c\" style={visible}>\n            <h6 className=\"subtitle\">{el.subtitle}</h6>\n            <h2 className=\"title\">{el.title}</h2>\n            <p className=\"text\">{el.text}</p>\n          </a.div>\n        </div>\n        <div className=\"col-2\"></div>\n      </div>\n      <div className=\"canvas-wrap\" style={data[i+1].type === \"slider\" || data[i+1].lightMode === \"light\" ? {paddingBottom: \"80px\"} : {paddingBottom: \"0px\"}}>\n        <Canvas\n          camera={{ position: [0, 1.5, 7], fov: 50 }}\n          gl={{ antialias: true, pixelRatio: window.devicePixelRatio }}\n          shadows\n        >\n          <pointLight position={[4, 5, 4]} intensity={1.2} />\n          <pointLight position={[0, -30, -10]} intensity={.8} />\n          <OrbitControls ref={orbit} {...orbitcontrols}/>\n          {isVisible && <Scene orbit={orbit} scroll={scroll} />}\n        </Canvas> \n      </div>\n      </InView>\n    </InView>\n  );\n}\n\nexport default Detail;\n","import React, { useState, useEffect, useRef, Suspense } from \"react\";\nimport \"./style.css\";\nimport {InView} from \"react-intersection-observer\";\nimport {a, useSpring, useSprings} from \"react-spring\";\nimport {data} from \"../../../../data\"\n\nfunction Slider({ i, el, section, setVisibleSection, slowFixed, scroll}) {\n\n\n// SETS IN VIEW\n\nconst [inView, setInView] = useState();\nuseEffect(()=>{\n  inView && setVisibleSection(i)\n\n},[inView])\n\n// LIGHT MODE OR DARK MODE (False is Dark)\nconst [lightMode, setLightMode] = useState();\n\nuseEffect(()=>{\n  if (el.lightMode === \"light\"){\n    setLightMode(true)\n  }\n  if (el.lightMode === \"dark\") {\n    setLightMode(false)\n  }\n  },[])\n  \n// ANIMATIONS\nconst fadeIn = useSprings(\n  el.images.length,\n  el.images.map((el, i) =>\n     inView ? {\n          from: {\n            opacity: 0,\n            transform: `translateY(+20px)`,\n          },\n          to: {\n            opacity: 1,\n            transform: `translateY(0px)`,\n          },\n\n          delay: 220 * i,\n          config: { mass: 1, tension: 120, friction: 40 },\n        } :\n        {\n          from: {\n            opacity: 1,\n            transform: `translateY(0px)`,\n          },\n          to: {\n            opacity: 0,\n            transform: `translateY(-20px)`,\n          },\n\n          delay: 220 * i,\n          config: { mass: 1, tension: 120, friction: 40 },\n        }\n      \n  )\n);\n\nconst subtitle = useSpring({\n  opacity: inView ? 1 : 0,\n  \n  // delay: 300,\n  config: { duration: 250 },\n});\n\n\nconst slider = {\n  id: \"slider\",\n  ref: section,\n  onChange: setInView,\n  threshold: .6,\n\n\n}\n\n  return (\n      <InView style={lightMode ? {background: \"#f4f4f4\"} : {background: \"#050505\"}} {...slider}>\n    {data[i+1] !== undefined && (data[i-1].type !== \"text\" && <div className=\"top-spacer\" />)}\n    <div className=\"content-wrap\">\n      \n    <a.h6 className=\"subtitle\" style={subtitle}>{el.subtitle}</a.h6>\n    </div>\n\n\n        <div className=\"slider\">\n        \n      \n      <ul className=\"card-row\">\n      {el.images.map((el, i)=> {\n        return <a.li className=\"card\" key={i} style={fadeIn[i]}>\n          <div className=\"thumbnail\">\n            <img src={el.src}/>\n          </div>\n          <div className=\"text-c\" style={lightMode ? {color: \"#050505\"} : {color: \"#fff\"}}>\n            <h6 className=\"subtitle\" style={lightMode ? {color: \"#707070\"} : {color: \"#959595\"}}>{el.subtitle}</h6>\n            <h4 className=\"title\">{el.title}</h4>\n          </div>\n        </a.li>\n      })}\n      </ul>\n      </div>\n      {data[i+1] !== undefined && (data[i+1].type !== \"slider\" && <div className=\"bottom-spacer\" />)}\n      \n      </InView>\n\n  );\n}\n\nexport default Slider;\n","import React, { useState, useRef, Suspense, useEffect } from \"react\";\nimport \"./style.css\";\nimport { data } from \"../../../../data\";\nimport { a, useSpring } from \"react-spring\";\nimport useOnScreen from \"../../../../hooks/useOnScreen\";\nimport { InView } from \"react-intersection-observer\";\n\nfunction Title({\n  i,\n  el,\n  section,\n  setVisibleSection,\n  slow3,\n  scrollContainer,\n  scroll,\n}) {\n  const [inView, setInView] = useState(false);\n\n  useEffect(() => {\n    inView && setVisibleSection(i);\n  }, [inView]);\n\n\n  //ANIMATIONS\n  const line1 = useSpring({\n    opacity: inView ? 1 : 0,\n    transform: inView ? \"translateY(0)\" : \"translateY(20px)\",\n    delay: 100,\n    config: { duration: 250 },\n  });\n  const line2 = useSpring({\n    opacity: inView ? 1 : 0,\n    transform: inView ? \"translateY(0)\" : \"translateY(20px)\",\n    delay: 200,\n    config: { duration: 250 },\n  });\n  const line3 = useSpring({\n    opacity: inView ? 1 : 0,\n    transform: inView ? \"translateY(0)\" : \"translateY(20px)\",\n    delay: 300,\n    config: { duration: 250 },\n  });\n\n  // LIGHT MODE OR DARK MODE (False is Dark)\n  const [lightMode, setLightMode] = useState();\n\n  useEffect(() => {\n    if (el.lightMode === \"light\") {\n      setLightMode(true);\n    }\n    if (el.lightMode === \"dark\") {\n      setLightMode(false);\n    }\n  }, []);\n\n  const title = {\n    id: \"title\",\n    ref: section,\n\n    style: lightMode ? { background: \"#f4f4f4\", paddingBottom: 0, } : { background: \"#050505\", paddingBottom: \"60px\", },\n\n    onChange: setInView,\n    threshold: 0.6,\n  };\n\n  return (\n    <InView {...title}>\n      <div className=\"section-wrap\">\n        <div className=\"line\"/>\n        <div className=\"row\">\n          <div className=\"col-3\">\n            {lightMode ? (\n              <div\n                className=\"text-c\"\n                \n                style={lightMode ? { color: \"#050505\" } : { color: \"#ffffff\" }}\n              >\n                <h6 className=\"subtitle\">{el.subtitle}</h6>\n                <h2 className=\"title\">{el.title}</h2>\n                <p className=\"text\">{el.text}</p>\n                {el.button && (\n                  <div className=\"button-c\">\n                    <a href={el.button.link}>\n                      <h6 className=\"button-text\">{el.button.text}</h6>\n                     </a> \n                      \n\n                      <div className=\"button-visual\"></div>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div\n                className=\"text-c\"\n            \n                style={lightMode ? { color: \"#050505\" } : { color: \"#ffffff\" }}\n              >\n                <a.h6 className=\"subtitle\" style={line1}>\n                  {el.subtitle}\n                </a.h6>\n                <a.h2 className=\"title\" style={line2}>\n                  {el.title}\n                </a.h2>\n                <a.p className=\"text\" style={line3}>\n                  {el.text}\n                </a.p>\n              </div>\n            )}\n          </div>\n          {/* <div className=\"col-1\"></div> */}\n        </div>\n      </div>\n    </InView>\n  );\n}\n\nexport default Title;\n","import React, {\n  useState,\n  useRef,\n  Suspense,\n  useEffect,\n  createRef,\n  useLayoutEffect,\n} from \"react\";\nimport \"./style.css\";\nimport Text from \"../../../../routes/mobile/sections/text\";\nimport { data } from \"../../../../data\";\nimport View from \"../../../../routes/mobile/sections/view\";\nimport Video from \"../../../../routes/mobile/sections/video\";\nimport Image from \"../../../../routes/mobile/sections/image\";\nimport Detail from \"../../../../routes/mobile/sections/detail\";\nimport Module from \"../module\";\nimport Slider from \"../../../../routes/mobile/sections/slider\";\nimport Title from \"../../../../routes/mobile/sections/title\";\n\nfunction Scroller({\n  current,\n  setCurrent,\n  scroll,\n  onScroll,\n  scrollContainer,\n  \n  setIsInView,\n  visibleSection,\n  setVisibleSection,\n\n  sections,\n  setSection,\n  sectionSize,\n  setSectionSize,\n  setProjectHeight,\n\n}) {\n  \n\n\n\n// // Setting Sections for Project page\n\n  useEffect(() => {\n    //Setting Grouped Refs\n    setSection((sections) =>\n      Array(data[current].sections.length)\n        .fill()\n        .map((el, i) => sections[i] || createRef())\n    );\n  }, []);\n\n//   // Getting size of each section\n  useEffect(() => {\n    if (sections.length === data.length) {\n      \n      let height = 0;\n      sections.map((el, i) => {\n        let sectsize = el.current.node.getBoundingClientRect().height;\n        setSectionSize((sectionSize) => [...sectionSize, sectsize]);\n\n        height += sectsize.height;\n        setProjectHeight(height);\n      });\n    }\n  }, [sections]);\n\n  //START UP\n\n  useEffect(() => {\n    // Setting Index for Each\n    data.map((el, i) => {\n      el.index = i;\n    });\n  }, []);\n\n  const view = {\n    scroll: scroll,\n    scrollContainer: scrollContainer,\n\n    current: current,\n    setCurrent: setCurrent,\n\n    visibleSection: visibleSection,\n    setIsInView: setIsInView,\n    setVisibleSection: setVisibleSection,\n    sectionSize: sectionSize,\n  };\n\n  const text = {\n    scroll: scroll,\n    scrollContainer: scrollContainer,\n\n    setVisibleSection: setVisibleSection,\n\n    data: data[current].sections,\n  };\n  const detail = {\n    scroll: scroll,\n    scrollContainer: scrollContainer,\n\n\n    setVisibleSection: setVisibleSection,\n    sectionSize: sectionSize,\n    data: data[current].sections,\n  };\n\n  const image = {\n    scroll: scroll,\n    scrollContainer: scrollContainer,\n\n    setVisibleSection: setVisibleSection,\n  };\n  return (\n    <div id=\"scroller\" ref={scrollContainer} onScroll={onScroll}>\n      {data[current].sections.map((el, i) => {\n        switch (el.type) {\n          default: {\n            return <div className=\"space\" key={i} />;\n          }\n          case \"title\": {\n            return (\n              <Title\n                key={i}\n                i={i}\n                el={el}\n                section={sections[i]}\n                {...text}\n              />\n            );\n          }\n          case \"text\": {\n            return (\n              <Text\n                key={i}\n                i={i}\n                el={el}\n                section={sections[i]}\n                {...text}\n              />\n            );\n          }\n          case \"view\": {\n            return (\n              <View key={i} i={i} el={el} section={sections[i]} {...view} />\n            );\n          }\n          case \"video\": {\n            return (\n              <Video key={i} i={i} el={el} section={sections[i]} {...image} />\n            );\n          }\n          case \"image\": {\n            return (\n              <Image key={i} i={i} el={el} section={sections[i]} {...image} />\n            );\n          }\n          case \"detail\": {\n            return (\n              <Detail key={i} i={i} el={el} section={sections[i]} {...detail} />\n            );\n          }\n          case \"slider\": {\n            return (\n              <Slider key={i} i={i} el={el} section={sections[i]} {...detail} />\n            );\n          }\n        }\n      })}\n    </div>\n  );\n}\n\nexport default Scroller;\n","import React, { useState, useRef, Suspense, useEffect, createRef } from \"react\";\nimport \"./style.css\";\nimport {\n  a,\n  useSpring,\n  useSprings,\n  useSpringRef,\n  useTransition,\n} from \"react-spring\";\n\nfunction Loader({ loading, setLoading, handleStart }) {\n  const [counter, setCounter] = useState(0);\n  const [countDone, setCountDone] = useState(false);\n  const [unmount, setUnmount] = useState(false);\n  const [array, setArray] = useState([]);\n  \n  //Unmount\n\n  const fadeOut = useSpring(unmount && {\n  \n\n    from: { opacity: 1, pointerEvents: \"all\" },\n    to: { opacity: 0, pointerEvents: \"none\" },\n    config: {duration: 400},\n    onRest: () => setLoading(false),\n  });\n const handleUnmount = () => {\n \n  if (countDone) {\n    setUnmount(true)\n    // setTimeout(() => setUnmount(), 4000);\n  }\n }\n\n\n  //Counter\n\n  useEffect(() => {\n    if (!countDone) {\n      if (Number.isInteger(counter / 5)) {\n        setArray((array) => [...array, counter]);\n      }\n      //Prevents gap in svg circle on completion\n      if (counter === 99) {\n        setArray((array) => [...array, 100]);\n      }\n      setTimeout(() => setCounter(counter + 1), 30);\n    }\n    if (counter >= 99) {\n      setCountDone(true);\n    }\n  }, [counter]);\n\n  let radius = 30;\n\n  let stroke = 1;\n  let progress = counter;\n\n  let normalizedRadius = radius - stroke * 2;\n\n  let circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - (progress / 100) * circumference;\n\n  //  ANIMATIONS\n\n  //Animated Ring\n  let numAnimated = 3;\n\n  const [fade, setFade] = useState([]);\n\n  //Using refs could be extremely costly. Might want to change to an array?\n  useEffect(() => {\n    //Setting Grouped Refs\n    setFade((fade) =>\n      Array(numAnimated)\n        .fill()\n        .map((el, i) => fade[i] || [i])\n    ); \n  }, []);\n\n\n  const fadeIn = useSprings(\n    fade.length,\n    fade.map((el, i) =>\n      !countDone\n        ? {\n            from: {\n              opacity: 0,\n              transform: `translateY(+20px) scale(${i === 0 ? 3 : 1})`,\n            },\n            to: {\n              opacity: 1,\n              transform: `translateY(0) scale(${i === 0 ? 4 : 1.2})`,\n            },\n\n            delay: (220 * i),\n            config: { mass: 1, tension: 120, friction: 40 },\n          }\n        : {\n            from: {\n              transform: `translateY(0) scale(${i === 0 ? 4 : (i === 1 ? 1.2 : 1)})`,\n              opacity: 1,\n            },\n            to: {\n              transform: `translateY(0) scale(${i === 0 ? 30 : (i === 1 ? 1.8 : 1)})`,\n              opacity: 0,\n            },\n\n            delay: i === 1 ? (220 * i) : 260,\n            config: { mass: 3, tension: 280, friction: 60 },\n          }\n    )\n  );\n\n  //Animated Letters\n  const letters = [\"c\", \"a\", \"n\", \"i\", \"s\"];\n  const lettersRef = useSpringRef();\n\n  const lettersSprings = useSprings(\n    letters.length,\n    letters.map(\n      (el, i) =>\n        countDone && {\n          from: {\n            opacity: 0,\n            transform: \"translateY(+20px)\",\n          },\n          to: {\n            opacity: 1,\n            transform: \"translateY(0)\",\n          },\n\n          delay: 900 + 180 * i,\n          config: {\n            // mass: 1,\n            // tension: 280,\n            // friction: 18\n          },\n          lettersRef,\n          onRest: () => {\n            // if (i=== letters.length-1 ) {\n            //   setLoading(false);\n            // }\n          }\n        }\n    )\n  );\n  //OTHER ANIMATIONS\n\n  const [flip, set] = useState(false)\n  const bounce = useSpring({\n    reset: true,\n    reverse: flip,\n    from: { opacity: 0 },\n    to: { opacity: 1 },\n    config: {duration: 800},\n    onRest: () => set(!flip),\n  });\n  const subtitle = useSpring({\n    opacity: countDone ? 1 : 0,\n    delay: 1800,\n  });\n\nlet mode = \"dark\";\n\n\n\n\n\n  return (\n    <a.div id=\"loader\" style={fadeOut} onClick={()=> handleUnmount()}>\n      \n        <a.div className=\"svg-c\" style={fadeIn[0]}>\n          <svg className=\"svg-path\" height={radius * 2} width={radius * 2}>\n            <circle\n              stroke={mode === \"light\" ? \"#404040\" : \"#f4f4f4\"}\n              fill=\"transparent\"\n              strokeWidth={stroke}\n              strokeDasharray={circumference + \" \" + circumference}\n              style={{ strokeDashoffset }}\n              r={normalizedRadius}\n              cx={radius}\n              cy={radius}\n            />\n          </svg>\n          <svg className=\"svg-back\" height={radius * 2} width={radius * 2}>\n            <circle\n              stroke={mode === \"light\" ? \"#f4f4f4\" : \"#202020\"}\n              fill=\"transparent\"\n              strokeWidth={stroke}\n              style={{ strokeDashoffset }}\n              r={normalizedRadius}\n              cx={radius}\n              cy={radius}\n            />\n          </svg>\n        </a.div>\n\n        <a.div className=\"loader-inner-c\" style={fadeIn[1]}>\n          <h1 className=\"loader-num\">{array.slice(-1)}%</h1>\n        </a.div>\n\n        <div className=\"header-c\">\n          <div className=\"letters-c\">\n            {lettersSprings.map((el, i) => {\n              return (\n                <a.h1 className=\"letter\" key={i} style={lettersSprings[i]}>\n                  {letters[i]}\n                </a.h1>\n              );\n            })}\n          </div>\n\n          <a.h4 className=\"subtitle\" style={subtitle}>\n            a ual group project\n          </a.h4>\n        </div>\n     \n        {!countDone ? <a.div className=\"loader-text-c\" style={fadeIn[2]}>\n          <a.p className=\"loader-text\" style={bounce}>\n            Loading...\n          </a.p>\n        </a.div> :\n         <a.div className=\"loader-text-c\" >\n          <a.p className=\"loader-text\" style={bounce}>\n            Tap anywhere to continue.\n          </a.p>\n        </a.div>\n}\n    </a.div>\n  );\n}\n\nexport default Loader;\n"],"names":["_ref","i","el","section","setVisibleSection","_useState","slow3","scrollContainer","scroll","data","useState","_useState2","_slicedToArray","inView","setInView","_useState3","_useState4","useEffect","parallax","useRef","line1","useSpring","opacity","transform","delay","config","duration","line2","textSprings","useSprings","text","length","map","from","to","_useState5","_useState6","lightMode","setLightMode","id","ref","style","background","onChange","entry","_jsx","InView","_objectSpread","children","threshold","className","_jsxs","color","subtitle","title","e","button","href","link","a","h6","h2","p","current","setCurrent","visibleSection","navigate","sectionSize","basename","useNavigate","url","useLocation","pathname","split","handleVisible","number","onTouchEnd","concat","replace","audio","setAudio","overlay","overlaytext","div","onClick","src","type","autoPlay","loop","playsInline","muted","height","orbit","isVisible","setIsVisible","visible","Scene","_ref2","_useGLTF","useGLTF","object","nodes","materials","undefined","main","THREE","transparent","_useState7","_useState8","useFrame","rotation","y","position","scale","x","z","mesh","material","geometry","mesh_0","Suspense","fallback","Loader","paddingBottom","Canvas","camera","fov","gl","antialias","pixelRatio","window","devicePixelRatio","shadows","intensity","OrbitControls","maxDistance","minDistance","slowFixed","fadeIn","images","mass","tension","friction","slider","li","line3","onScroll","setIsInView","sections","setSection","setSectionSize","setProjectHeight","Array","fill","createRef","sectsize","node","getBoundingClientRect","_toConsumableArray","index","view","detail","image","Title","Text","View","Video","Image","Detail","Slider","loading","setLoading","handleStart","counter","setCounter","countDone","setCountDone","unmount","setUnmount","array","setArray","fadeOut","pointerEvents","onRest","Number","isInteger","setTimeout","radius","progress","circumference","normalizedRadius","Math","PI","strokeDashoffset","_useState9","_useState10","fade","setFade","letters","lettersRef","useSpringRef","lettersSprings","_useState11","_useState12","flip","set","bounce","reset","reverse","width","stroke","strokeWidth","strokeDasharray","r","cx","cy","slice","h1","h4"],"sourceRoot":""}