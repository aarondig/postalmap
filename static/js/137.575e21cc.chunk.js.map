{"version":3,"file":"static/js/137.575e21cc.chunk.js","mappings":"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","sources":["routes/mobile/pages/Loader/index.js","../node_modules/react-swipeable/src/types.ts","../node_modules/react-swipeable/src/index.ts","routes/mobile/pages/home/index.js"],"sourcesContent":["import React, { useState, useRef, Suspense, useEffect, createRef } from \"react\";\nimport \"./style.css\";\nimport {\n  a,\n  useSpring,\n  useSprings,\n  useSpringRef,\n  useTransition,\n} from \"react-spring\";\n\nfunction Loader({ loading, setLoading, handleStart }) {\n  const [counter, setCounter] = useState(0);\n  const [countDone, setCountDone] = useState(false);\n  const [unmount, setUnmount] = useState(false);\n  const [array, setArray] = useState([]);\n  \n  //Unmount\n\n  const fadeOut = useSpring(unmount && {\n  \n\n    from: { opacity: 1, pointerEvents: \"all\" },\n    to: { opacity: 0, pointerEvents: \"none\" },\n    config: {duration: 400},\n    onRest: () => setLoading(false),\n  });\n const handleUnmount = () => {\n \n  if (countDone) {\n    setUnmount(true)\n    // setTimeout(() => setUnmount(), 4000);\n  }\n }\n\n\n  //Counter\n\n  useEffect(() => {\n    if (!countDone) {\n      if (Number.isInteger(counter / 5)) {\n        setArray((array) => [...array, counter]);\n      }\n      //Prevents gap in svg circle on completion\n      if (counter === 99) {\n        setArray((array) => [...array, 100]);\n      }\n      setTimeout(() => setCounter(counter + 1), 30);\n    }\n    if (counter >= 99) {\n      setCountDone(true);\n    }\n  }, [counter]);\n\n  let radius = 30;\n\n  let stroke = 1;\n  let progress = counter;\n\n  let normalizedRadius = radius - stroke * 2;\n\n  let circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - (progress / 100) * circumference;\n\n  //  ANIMATIONS\n\n  //Animated Ring\n  let numAnimated = 3;\n\n  const [fade, setFade] = useState([]);\n\n  //Using refs could be extremely costly. Might want to change to an array?\n  useEffect(() => {\n    //Setting Grouped Refs\n    setFade((fade) =>\n      Array(numAnimated)\n        .fill()\n        .map((el, i) => fade[i] || [i])\n    ); \n  }, []);\n\n\n  const fadeIn = useSprings(\n    fade.length,\n    fade.map((el, i) =>\n      !countDone\n        ? {\n            from: {\n              opacity: 0,\n              transform: `translateY(+20px) scale(${i === 0 ? 3 : 1})`,\n            },\n            to: {\n              opacity: 1,\n              transform: `translateY(0) scale(${i === 0 ? 4 : 1.2})`,\n            },\n\n            delay: (220 * i),\n            config: { mass: 1, tension: 120, friction: 40 },\n          }\n        : {\n            from: {\n              transform: `translateY(0) scale(${i === 0 ? 4 : (i === 1 ? 1.2 : 1)})`,\n              opacity: 1,\n            },\n            to: {\n              transform: `translateY(0) scale(${i === 0 ? 30 : (i === 1 ? 1.8 : 1)})`,\n              opacity: 0,\n            },\n\n            delay: i === 1 ? (220 * i) : 260,\n            config: { mass: 3, tension: 280, friction: 60 },\n          }\n    )\n  );\n\n  //Animated Letters\n  const letters = [\"c\", \"a\", \"n\", \"i\", \"s\"];\n  const lettersRef = useSpringRef();\n\n  const lettersSprings = useSprings(\n    letters.length,\n    letters.map(\n      (el, i) =>\n        countDone && {\n          from: {\n            opacity: 0,\n            transform: \"translateY(+20px)\",\n          },\n          to: {\n            opacity: 1,\n            transform: \"translateY(0)\",\n          },\n\n          delay: 900 + 180 * i,\n          config: {\n            // mass: 1,\n            // tension: 280,\n            // friction: 18\n          },\n          lettersRef,\n          onRest: () => {\n            // if (i=== letters.length-1 ) {\n            //   setLoading(false);\n            // }\n          }\n        }\n    )\n  );\n  //OTHER ANIMATIONS\n\n  const [flip, set] = useState(false)\n  const bounce = useSpring({\n    reset: true,\n    reverse: flip,\n    from: { opacity: 0 },\n    to: { opacity: 1 },\n    config: {duration: 800},\n    onRest: () => set(!flip),\n  });\n  const subtitle = useSpring({\n    opacity: countDone ? 1 : 0,\n    delay: 1800,\n  });\n\nlet mode = \"dark\";\n\n\n\n\n\n  return (\n    <a.div id=\"loader\" style={fadeOut} onClick={()=> handleUnmount()}>\n      \n        <a.div className=\"svg-c\" style={fadeIn[0]}>\n          <svg className=\"svg-path\" height={radius * 2} width={radius * 2}>\n            <circle\n              stroke={mode === \"light\" ? \"#404040\" : \"#f4f4f4\"}\n              fill=\"transparent\"\n              strokeWidth={stroke}\n              strokeDasharray={circumference + \" \" + circumference}\n              style={{ strokeDashoffset }}\n              r={normalizedRadius}\n              cx={radius}\n              cy={radius}\n            />\n          </svg>\n          <svg className=\"svg-back\" height={radius * 2} width={radius * 2}>\n            <circle\n              stroke={mode === \"light\" ? \"#f4f4f4\" : \"#202020\"}\n              fill=\"transparent\"\n              strokeWidth={stroke}\n              style={{ strokeDashoffset }}\n              r={normalizedRadius}\n              cx={radius}\n              cy={radius}\n            />\n          </svg>\n        </a.div>\n\n        <a.div className=\"loader-inner-c\" style={fadeIn[1]}>\n          <h1 className=\"loader-num\">{array.slice(-1)}%</h1>\n        </a.div>\n\n        <div className=\"header-c\">\n          <div className=\"letters-c\">\n            {lettersSprings.map((el, i) => {\n              return (\n                <a.h1 className=\"letter\" key={i} style={lettersSprings[i]}>\n                  {letters[i]}\n                </a.h1>\n              );\n            })}\n          </div>\n\n          <a.h4 className=\"subtitle\" style={subtitle}>\n            a ual group project\n          </a.h4>\n        </div>\n     \n        {!countDone ? <a.div className=\"loader-text-c\" style={fadeIn[2]}>\n          <a.p className=\"loader-text\" style={bounce}>\n            Loading...\n          </a.p>\n        </a.div> :\n         <a.div className=\"loader-text-c\" >\n          <a.p className=\"loader-text\" style={bounce}>\n            Tap anywhere to continue.\n          </a.p>\n        </a.div>\n}\n    </a.div>\n  );\n}\n\nexport default Loader;\n","import * as React from \"react\";\n\nexport const LEFT = \"Left\";\nexport const RIGHT = \"Right\";\nexport const UP = \"Up\";\nexport const DOWN = \"Down\";\nexport type HandledEvents = React.MouseEvent | TouchEvent | MouseEvent;\nexport type Vector2 = [number, number];\nexport type SwipeDirections =\n  | typeof LEFT\n  | typeof RIGHT\n  | typeof UP\n  | typeof DOWN;\nexport interface SwipeEventData {\n  /**\n   * Absolute displacement of swipe in x. Math.abs(deltaX);\n   */\n  absX: number;\n  /**\n   * Absolute displacement of swipe in y. Math.abs(deltaY);\n   */\n  absY: number;\n  /**\n   * Displacement of swipe in x. (current.x - initial.x)\n   */\n  deltaX: number;\n  /**\n   * Displacement of swipe in y. (current.y - initial.y)\n   */\n  deltaY: number;\n  /**\n   * Direction of swipe - Left | Right | Up | Down\n   */\n  dir: SwipeDirections;\n  /**\n   * Source event.\n   */\n  event: HandledEvents;\n  /**\n   * True for the first event of a tracked swipe.\n   */\n  first: boolean;\n  /**\n   * Location where swipe started - [x, y].\n   */\n  initial: Vector2;\n  /**\n   * \"Absolute velocity\" (speed) - √(absX^2 + absY^2) / time\n   */\n  velocity: number;\n  /**\n   * Velocity per axis - [ deltaX/time, deltaY/time ]\n   */\n  vxvy: Vector2;\n}\n\nexport type SwipeCallback = (eventData: SwipeEventData) => void;\nexport type TapCallback = ({ event }: { event: HandledEvents }) => void;\n\nexport type SwipeableDirectionCallbacks = {\n  /**\n   * Called after a DOWN swipe\n   */\n  onSwipedDown: SwipeCallback;\n  /**\n   * Called after a LEFT swipe\n   */\n  onSwipedLeft: SwipeCallback;\n  /**\n   * Called after a RIGHT swipe\n   */\n  onSwipedRight: SwipeCallback;\n  /**\n   * Called after a UP swipe\n   */\n  onSwipedUp: SwipeCallback;\n};\n\nexport type SwipeableCallbacks = SwipeableDirectionCallbacks & {\n  /**\n   * Called at start of a tracked swipe.\n   */\n  onSwipeStart: SwipeCallback;\n  /**\n   * Called after any swipe.\n   */\n  onSwiped: SwipeCallback;\n  /**\n   * Called for each move event during a tracked swipe.\n   */\n  onSwiping: SwipeCallback;\n  /**\n   * Called after a tap. A touch under the min distance, `delta`.\n   */\n  onTap: TapCallback;\n  /**\n   * Called for `touchstart` and `mousedown`.\n   */\n  onTouchStartOrOnMouseDown: TapCallback;\n  /**\n   * Called for `touchend` and `mouseup`.\n   */\n  onTouchEndOrOnMouseUp: TapCallback;\n};\n\n// Configuration Options\nexport type ConfigurationOptionDelta =\n  | number\n  | { [key in Lowercase<SwipeDirections>]?: number };\n\nexport interface ConfigurationOptions {\n  /**\n   * Min distance(px) before a swipe starts. **Default**: `10`\n   */\n  delta: ConfigurationOptionDelta;\n  /**\n   * Prevents scroll during swipe in most cases. **Default**: `false`\n   */\n  preventScrollOnSwipe: boolean;\n  /**\n   * Set a rotation angle. **Default**: `0`\n   */\n  rotationAngle: number;\n  /**\n   * Track mouse input. **Default**: `false`\n   */\n  trackMouse: boolean;\n  /**\n   * Track touch input. **Default**: `true`\n   */\n  trackTouch: boolean;\n  /**\n   * Allowable duration of a swipe (ms). **Default**: `Infinity`\n   */\n  swipeDuration: number;\n  /**\n   * Options for touch event listeners\n   */\n  touchEventOptions: { passive: boolean };\n}\n\nexport type SwipeableProps = Partial<SwipeableCallbacks & ConfigurationOptions>;\n\nexport type SwipeablePropsWithDefaultOptions = Partial<SwipeableCallbacks> &\n  ConfigurationOptions;\n\nexport interface SwipeableHandlers {\n  ref(element: HTMLElement | null): void;\n  onMouseDown?(event: React.MouseEvent): void;\n}\n\nexport type SwipeableState = {\n  cleanUpTouch?: () => void;\n  el?: HTMLElement;\n  eventData?: SwipeEventData;\n  first: boolean;\n  initial: Vector2;\n  start: number;\n  swiping: boolean;\n  xy: Vector2;\n};\n\nexport type StateSetter = (\n  state: SwipeableState,\n  props: SwipeablePropsWithDefaultOptions\n) => SwipeableState;\nexport type Setter = (stateSetter: StateSetter) => void;\nexport type AttachTouch = (\n  el: HTMLElement,\n  props: SwipeablePropsWithDefaultOptions\n) => () => void;\n","/* global document */\nimport * as React from \"react\";\nimport {\n  AttachTouch,\n  SwipeDirections,\n  DOWN,\n  SwipeEventData,\n  HandledEvents,\n  LEFT,\n  RIGHT,\n  Setter,\n  ConfigurationOptions,\n  SwipeableDirectionCallbacks,\n  SwipeableHandlers,\n  SwipeableProps,\n  SwipeablePropsWithDefaultOptions,\n  SwipeableState,\n  SwipeCallback,\n  TapCallback,\n  UP,\n  Vector2,\n} from \"./types\";\n\nexport {\n  LEFT,\n  RIGHT,\n  UP,\n  DOWN,\n  SwipeDirections,\n  SwipeEventData,\n  SwipeableDirectionCallbacks,\n  SwipeCallback,\n  TapCallback,\n  SwipeableHandlers,\n  SwipeableProps,\n  Vector2,\n};\n\nconst defaultProps: ConfigurationOptions = {\n  delta: 10,\n  preventScrollOnSwipe: false,\n  rotationAngle: 0,\n  trackMouse: false,\n  trackTouch: true,\n  swipeDuration: Infinity,\n  touchEventOptions: { passive: true },\n};\nconst initialState: SwipeableState = {\n  first: true,\n  initial: [0, 0],\n  start: 0,\n  swiping: false,\n  xy: [0, 0],\n};\nconst mouseMove = \"mousemove\";\nconst mouseUp = \"mouseup\";\nconst touchEnd = \"touchend\";\nconst touchMove = \"touchmove\";\nconst touchStart = \"touchstart\";\n\nfunction getDirection(\n  absX: number,\n  absY: number,\n  deltaX: number,\n  deltaY: number\n): SwipeDirections {\n  if (absX > absY) {\n    if (deltaX > 0) {\n      return RIGHT;\n    }\n    return LEFT;\n  } else if (deltaY > 0) {\n    return DOWN;\n  }\n  return UP;\n}\n\nfunction rotateXYByAngle(pos: Vector2, angle: number): Vector2 {\n  if (angle === 0) return pos;\n  const angleInRadians = (Math.PI / 180) * angle;\n  const x =\n    pos[0] * Math.cos(angleInRadians) + pos[1] * Math.sin(angleInRadians);\n  const y =\n    pos[1] * Math.cos(angleInRadians) - pos[0] * Math.sin(angleInRadians);\n  return [x, y];\n}\n\nfunction getHandlers(\n  set: Setter,\n  handlerProps: { trackMouse: boolean | undefined }\n): [\n  {\n    ref: (element: HTMLElement | null) => void;\n    onMouseDown?: (event: React.MouseEvent) => void;\n  },\n  AttachTouch\n] {\n  const onStart = (event: HandledEvents) => {\n    const isTouch = \"touches\" in event;\n    // if more than a single touch don't track, for now...\n    if (isTouch && event.touches.length > 1) return;\n\n    set((state, props) => {\n      // setup mouse listeners on document to track swipe since swipe can leave container\n      if (props.trackMouse && !isTouch) {\n        document.addEventListener(mouseMove, onMove);\n        document.addEventListener(mouseUp, onUp);\n      }\n      const { clientX, clientY } = isTouch ? event.touches[0] : event;\n      const xy = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n\n      props.onTouchStartOrOnMouseDown &&\n        props.onTouchStartOrOnMouseDown({ event });\n\n      return {\n        ...state,\n        ...initialState,\n        initial: xy.slice() as Vector2,\n        xy,\n        start: event.timeStamp || 0,\n      };\n    });\n  };\n\n  const onMove = (event: HandledEvents) => {\n    set((state, props) => {\n      const isTouch = \"touches\" in event;\n      // Discount a swipe if additional touches are present after\n      // a swipe has started.\n      if (isTouch && event.touches.length > 1) {\n        return state;\n      }\n\n      // if swipe has exceeded duration stop tracking\n      if (event.timeStamp - state.start > props.swipeDuration) {\n        return state.swiping ? { ...state, swiping: false } : state;\n      }\n\n      const { clientX, clientY } = isTouch ? event.touches[0] : event;\n      const [x, y] = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n      const deltaX = x - state.xy[0];\n      const deltaY = y - state.xy[1];\n      const absX = Math.abs(deltaX);\n      const absY = Math.abs(deltaY);\n      const time = (event.timeStamp || 0) - state.start;\n      const velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1);\n      const vxvy: Vector2 = [deltaX / (time || 1), deltaY / (time || 1)];\n\n      const dir = getDirection(absX, absY, deltaX, deltaY);\n\n      // if swipe is under delta and we have not started to track a swipe: skip update\n      const delta =\n        typeof props.delta === \"number\"\n          ? props.delta\n          : props.delta[dir.toLowerCase() as Lowercase<SwipeDirections>] ||\n            defaultProps.delta;\n      if (absX < delta && absY < delta && !state.swiping) return state;\n\n      const eventData = {\n        absX,\n        absY,\n        deltaX,\n        deltaY,\n        dir,\n        event,\n        first: state.first,\n        initial: state.initial,\n        velocity,\n        vxvy,\n      };\n\n      // call onSwipeStart if present and is first swipe event\n      eventData.first && props.onSwipeStart && props.onSwipeStart(eventData);\n\n      // call onSwiping if present\n      props.onSwiping && props.onSwiping(eventData);\n\n      // track if a swipe is cancelable (handler for swiping or swiped(dir) exists)\n      // so we can call preventDefault if needed\n      let cancelablePageSwipe = false;\n      if (\n        props.onSwiping ||\n        props.onSwiped ||\n        props[`onSwiped${dir}` as keyof SwipeableDirectionCallbacks]\n      ) {\n        cancelablePageSwipe = true;\n      }\n\n      if (\n        cancelablePageSwipe &&\n        props.preventScrollOnSwipe &&\n        props.trackTouch &&\n        event.cancelable\n      ) {\n        event.preventDefault();\n      }\n\n      return {\n        ...state,\n        // first is now always false\n        first: false,\n        eventData,\n        swiping: true,\n      };\n    });\n  };\n\n  const onEnd = (event: HandledEvents) => {\n    set((state, props) => {\n      let eventData: SwipeEventData | undefined;\n      if (state.swiping && state.eventData) {\n        // if swipe is less than duration fire swiped callbacks\n        if (event.timeStamp - state.start < props.swipeDuration) {\n          eventData = { ...state.eventData, event };\n          props.onSwiped && props.onSwiped(eventData);\n\n          const onSwipedDir =\n            props[\n              `onSwiped${eventData.dir}` as keyof SwipeableDirectionCallbacks\n            ];\n          onSwipedDir && onSwipedDir(eventData);\n        }\n      } else {\n        props.onTap && props.onTap({ event });\n      }\n\n      props.onTouchEndOrOnMouseUp && props.onTouchEndOrOnMouseUp({ event });\n\n      return { ...state, ...initialState, eventData };\n    });\n  };\n\n  const cleanUpMouse = () => {\n    // safe to just call removeEventListener\n    document.removeEventListener(mouseMove, onMove);\n    document.removeEventListener(mouseUp, onUp);\n  };\n\n  const onUp = (e: HandledEvents) => {\n    cleanUpMouse();\n    onEnd(e);\n  };\n\n  /**\n   * The value of passive on touchMove depends on `preventScrollOnSwipe`:\n   * - true => { passive: false }\n   * - false => { passive: true } // Default\n   *\n   * NOTE: When preventScrollOnSwipe is true, we attempt to call preventDefault to prevent scroll.\n   *\n   * props.touchEventOptions can also be set for all touch event listeners,\n   * but for `touchmove` specifically when `preventScrollOnSwipe` it will\n   * supersede and force passive to false.\n   *\n   */\n  const attachTouch: AttachTouch = (el, props) => {\n    let cleanup = () => {};\n    if (el && el.addEventListener) {\n      const baseOptions = {\n        ...defaultProps.touchEventOptions,\n        ...props.touchEventOptions,\n      };\n      // attach touch event listeners and handlers\n      const tls: [\n        typeof touchStart | typeof touchMove | typeof touchEnd,\n        (e: HandledEvents) => void,\n        { passive: boolean }\n      ][] = [\n        [touchStart, onStart, baseOptions],\n        // preventScrollOnSwipe option supersedes touchEventOptions.passive\n        [\n          touchMove,\n          onMove,\n          {\n            ...baseOptions,\n            ...(props.preventScrollOnSwipe ? { passive: false } : {}),\n          },\n        ],\n        [touchEnd, onEnd, baseOptions],\n      ];\n      tls.forEach(([e, h, o]) => el.addEventListener(e, h, o));\n      // return properly scoped cleanup method for removing listeners, options not required\n      cleanup = () => tls.forEach(([e, h]) => el.removeEventListener(e, h));\n    }\n    return cleanup;\n  };\n\n  const onRef = (el: HTMLElement | null) => {\n    // \"inline\" ref functions are called twice on render, once with null then again with DOM element\n    // ignore null here\n    if (el === null) return;\n    set((state, props) => {\n      // if the same DOM el as previous just return state\n      if (state.el === el) return state;\n\n      const addState: { cleanUpTouch?: () => void } = {};\n      // if new DOM el clean up old DOM and reset cleanUpTouch\n      if (state.el && state.el !== el && state.cleanUpTouch) {\n        state.cleanUpTouch();\n        addState.cleanUpTouch = void 0;\n      }\n      // only attach if we want to track touch\n      if (props.trackTouch && el) {\n        addState.cleanUpTouch = attachTouch(el, props);\n      }\n\n      // store event attached DOM el for comparison, clean up, and re-attachment\n      return { ...state, el, ...addState };\n    });\n  };\n\n  // set ref callback to attach touch event listeners\n  const output: { ref: typeof onRef; onMouseDown?: typeof onStart } = {\n    ref: onRef,\n  };\n\n  // if track mouse attach mouse down listener\n  if (handlerProps.trackMouse) {\n    output.onMouseDown = onStart;\n  }\n\n  return [output, attachTouch];\n}\n\nfunction updateTransientState(\n  state: SwipeableState,\n  props: SwipeablePropsWithDefaultOptions,\n  previousProps: SwipeablePropsWithDefaultOptions,\n  attachTouch: AttachTouch\n) {\n  // if trackTouch is off or there is no el, then remove handlers if necessary and exit\n  if (!props.trackTouch || !state.el) {\n    if (state.cleanUpTouch) {\n      state.cleanUpTouch();\n    }\n\n    return {\n      ...state,\n      cleanUpTouch: undefined,\n    };\n  }\n\n  // trackTouch is on, so if there are no handlers attached, attach them and exit\n  if (!state.cleanUpTouch) {\n    return {\n      ...state,\n      cleanUpTouch: attachTouch(state.el, props),\n    };\n  }\n\n  // trackTouch is on and handlers are already attached, so if preventScrollOnSwipe changes value,\n  // remove and reattach handlers (this is required to update the passive option when attaching\n  // the handlers)\n  if (\n    props.preventScrollOnSwipe !== previousProps.preventScrollOnSwipe ||\n    props.touchEventOptions.passive !== previousProps.touchEventOptions.passive\n  ) {\n    state.cleanUpTouch();\n\n    return {\n      ...state,\n      cleanUpTouch: attachTouch(state.el, props),\n    };\n  }\n\n  return state;\n}\n\nexport function useSwipeable(options: SwipeableProps): SwipeableHandlers {\n  const { trackMouse } = options;\n  const transientState = React.useRef({ ...initialState });\n  const transientProps = React.useRef<SwipeablePropsWithDefaultOptions>({\n    ...defaultProps,\n  });\n\n  // track previous rendered props\n  const previousProps = React.useRef<SwipeablePropsWithDefaultOptions>({\n    ...transientProps.current,\n  });\n  previousProps.current = { ...transientProps.current };\n\n  // update current render props & defaults\n  transientProps.current = {\n    ...defaultProps,\n    ...options,\n  };\n  // Force defaults for config properties\n  let defaultKey: keyof ConfigurationOptions;\n  for (defaultKey in defaultProps) {\n    if (transientProps.current[defaultKey] === void 0) {\n      (transientProps.current[defaultKey] as any) = defaultProps[defaultKey];\n    }\n  }\n\n  const [handlers, attachTouch] = React.useMemo(\n    () =>\n      getHandlers(\n        (stateSetter) =>\n          (transientState.current = stateSetter(\n            transientState.current,\n            transientProps.current\n          )),\n        { trackMouse }\n      ),\n    [trackMouse]\n  );\n\n  transientState.current = updateTransientState(\n    transientState.current,\n    transientProps.current,\n    previousProps.current,\n    attachTouch\n  );\n\n  return handlers;\n}\n","import React, { useState, useEffect, createRef, Suspense } from \"react\";\nimport \"./style.css\";\n//   a,\n//   useSpring,\n//   useSprings,\n//   useSpringRef,\n//   useTransition,\n// } from \"react-spring\";\nimport { a, easings } from \"react-spring\";\nimport {\n  useSpring,\n  useSprings,\n  a as Animated,\n} from \"@react-spring/three\";\nimport { data } from \"../../../../data\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSwipeable } from \"react-swipeable\";\nimport Loader from \"../Loader\";\n\nconst Scene = React.lazy(() => import(\"./scene\"));\n\nfunction Home({ current, setCurrent, basename }) {\n  //Startup Function\n  const [loaded, setLoaded] = useState(false);\n\n  let modelcount = [];\n  const [models, setModels] = useState([]);\n\n  useEffect(() => {\n    //Setting Grouped Refs\n\n    {\n      data.map((el, i) => {\n        let count = 0;\n        if (el.type === \"view\") {\n          modelcount.push(count + 1);\n        }\n      });\n    }\n    setModels((models) =>\n      Array(modelcount.length)\n        .fill()\n        .map((el, i) => models[i] || createRef())\n    );\n    setLoaded(true);\n  }, []);\n\n  //Selecting Page\n  const handleNext = () => {\n    if (current >= models.length - 1) {\n      setCurrent(0);\n    }\n    if (current < models.length - 1) {\n      setCurrent(current + 1);\n    }\n  };\n  const handlePrev = () => {\n    if (current <= 0) {\n      setCurrent(models.length - 1);\n    }\n    if (current > 0) {\n      setCurrent(current - 1);\n    }\n  };\n\n  // Navigating to Page\n  const navigate = useNavigate();\n  const handleEnter = () => {\n    navigate(`${data[current].id}`);\n  };\n  // Swipeable\n  const handlers = useSwipeable({\n    onSwipedLeft: ()=> handleNext(),\n    onSwipedRight: ()=> handlePrev(),\n  })\n\n\n  \n  // Animations\nconst slideup = useSpring(\n  {\n       opacity: loaded ? 1 : 0, \n       transform: loaded ? \"translateY(0vh)\" : \"translateY(100vh)\",\n       delay: 100,\n       config: {\n         duration: 1200,\n         tension: 120,\n         friction: 14,\n         easing: easings.easeInBounce,\n       },\n     }\n    \n   );\n\n  const line1 = useSpring({\n    from: { opacity: 0, transform: \"translateY(20px)\" },\n    to: { opacity: 1, transform: \"translateY(0px)\" },\n    // delay: 300,\n    delay: 1150,\n    config: { duration: 350, tension: 120, friction: 14 },\n  });\n  const line2 = useSpring({\n    from: {\n      opacity: 0,\n      transform: \"translateY(20px)\",\n    },\n    to: { opacity: 1, transform: \"translateY(0px)\" },\n    // delay: 400,\n    delay: 1300,\n\n    config: { duration: 350, tension: 120, friction: 14 },\n  });\n  const line3 = useSpring({\n    from: {\n      opacity: 0,\n      transform: \"translateY(20px)\",\n    },\n    to: { opacity: 1, transform: \"translateY(0px)\" },\n    // delay: 400,\n    delay: 1450,\n\n    config: { duration: 350, tension: 120, friction: 14 },\n  });\n\n  const textSprings = useSprings(\n    models.length,\n    models.map((el, i) =>\n      i === current\n        ? {\n            from: { opacity: 0 },\n            to: { opacity: 1 },\n          }\n        : {\n            from: { opacity: 1 },\n            to: { opacity: 0 },\n          }\n    )\n  );\n  const indexSprings = useSprings(\n    models.length,\n    models.map((el, i) =>\n      i === current\n        ? {\n            from: { opacity: 0.1 },\n            to: { opacity: 1 },\n          }\n        : {\n            from: { opacity: 1 },\n            to: { opacity: 0.1 },\n          }\n    )\n  );\n\n  const scene = {\n    models: models,\n    current: current,\n    loaded: loaded,\n    setLoaded: setLoaded,\n  };\n\n  let count = -1;\n  return (\n    <div id=\"home\">\n      \n      <a.div className=\"section-wrap\" style={slideup} {...handlers}>\n        <div className=\"info-c\">\n          {data.map((el, i) => {\n            if (el.type === \"view\") {\n              count++;\n              return (\n                <a.div className=\"text-c\" key={i} style={textSprings[count]}>\n                  <a.h6\n                    className=\"title\"\n                    style={line1}\n                    onClick={() => handleEnter()}\n                  >\n                    {el.title}\n                  </a.h6>\n                  <a.p className=\"text\" style={line2}>\n                    {el.text}\n                  </a.p>\n                </a.div>\n              );\n            }\n          })}\n        </div>\n        <a.div className=\"row\" style={line3}>\n          <div className=\"order-btns\">\n            <div className=\"order-btn prev\" onClick={() => handlePrev()}>\n              <p>Prev</p>\n            </div>\n            <div className=\"order-btn\">\n              <p>/</p>\n            </div>\n            <div className=\"order-btn next\" onClick={() => handleNext()}>\n              <p>Next</p>\n            </div>\n          </div>\n          <ul className=\"index-c\">\n            {indexSprings.map((el, i) => {\n              return (\n                <a.div\n                  className=\"index\"\n                  key={i}\n                  style={indexSprings[i]}\n                  onClick={() => setCurrent(i)}\n                >\n                  <div className=\"index-line\" />\n                </a.div>\n              );\n            })}\n          </ul>\n        </a.div>\n      </a.div>\n      <Suspense fallback={<p>loading</p>}>\n      <Scene {...scene} />\n      </Suspense>\n    </div>\n  );\n}\n\nexport default Home;\n"],"names":["_ref","loading","setLoading","_useState","handleStart","useState","_useState2","_slicedToArray","counter","setCounter","_useState3","_useState4","countDone","setCountDone","_useState5","_useState6","unmount","setUnmount","_useState7","_useState8","array","setArray","fadeOut","useSpring","from","opacity","pointerEvents","to","config","duration","onRest","useEffect","Number","isInteger","concat","_toConsumableArray","setTimeout","radius","progress","circumference","normalizedRadius","Math","PI","strokeDashoffset","_useState9","_useState10","fade","setFade","Array","fill","map","el","i","fadeIn","useSprings","length","transform","delay","mass","tension","friction","letters","lettersRef","useSpringRef","lettersSprings","_useState11","_useState12","flip","set","bounce","reset","reverse","subtitle","_jsxs","a","div","id","style","onClick","children","className","_jsx","height","width","stroke","strokeWidth","strokeDasharray","r","cx","cy","slice","h1","h4","p","LEFT","RIGHT","UP","DOWN","defaultProps","delta","preventScrollOnSwipe","rotationAngle","trackMouse","trackTouch","swipeDuration","Infinity","touchEventOptions","passive","initialState","first","initial","start","swiping","xy","mouseMove","mouseUp","touchEnd","touchMove","touchStart","rotateXYByAngle","pos","angle","angleInRadians","cos","sin","getHandlers","handlerProps","onStart","event","isTouch","touches","state","props","document","addEventListener","onMove","onUp","clientX","clientY","onTouchStartOrOnMouseDown","Object","assign","timeStamp","_ref2","_rotateXYByAngle","_rotateXYByAngle2","x","y","deltaX","deltaY","absX","abs","absY","time","velocity","sqrt","vxvy","dir","getDirection","toLowerCase","eventData","onSwipeStart","onSwiping","cancelablePageSwipe","onSwiped","cancelable","preventDefault","onEnd","onSwipedDir","onTap","onTouchEndOrOnMouseUp","cleanUpMouse","removeEventListener","e","attachTouch","cleanup","baseOptions","tls","forEach","_ref3","_ref4","h","o","_ref5","_ref6","output","ref","addState","cleanUpTouch","onMouseDown","useSwipeable","options","defaultKey","transientState","React","transientProps","previousProps","current","_React$useMemo","stateSetter","_React$useMemo2","handlers","undefined","updateTransientState","Scene","setCurrent","basename","loaded","setLoaded","modelcount","models","setModels","data","type","push","count","createRef","handleNext","handlePrev","navigate","useNavigate","onSwipedLeft","onSwipedRight","slideup","easing","easings","easeInBounce","line1","line2","line3","textSprings","indexSprings","scene","_objectSpread","h6","title","text","Suspense","fallback"],"sourceRoot":""}